
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define FPS 1
#define SYMB 2
#define MDIA 3
#define FN 4


/ {
    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
        &kp TAB   &kp Q      &kp W     &kp E      &kp R       &kp T                &kp Y     &kp U      &kp I     &kp O       &kp P        &kp BSLH
       &kp CAPS   &kp D      &kp S     &kp D      &kp F       &kp G                &kp H     &kp J      &kp K     &kp L  &lt 3 SEMI        &kp APOS
 &mt LSHFT LPAR   &kp Z      &kp X     &kp C      &kp V       &kp B                &kp N     &kp M  &kp COMMA   &kp DOT    &kp FSLH  &mt RSHFT RPAR
                         &kp LCTRL  &kp LEFT  &kp RIGHT                                   &kp DOWN     &kp UP  &kp LBKT
                                              &kp LCTRL    &kp BSPC             &kp RALT   &kp ESC
                                    &kp LALT   &kp LCMD       &mo 2            &kp PG_UP   &kp RET  &kp SPACE
                                                         &lt 4 CAPS            &kp PG_DN
            >;
        };

        layer_fps {
            bindings = <
 &trans     &trans   &kp Q   &kp W      &kp E   &kp R            &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp LSHFT   &kp A   &kp S      &kp D   &kp F            &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp LCTRL   &kp Z   &kp X      &kp C   &kp V            &trans  &trans  &trans  &trans  &trans  &trans
                    &trans  &trans     &trans                            &trans  &trans  &trans
                                       &trans  &trans            &trans  &trans
                            &trans  &kp SPACE  &trans            &trans  &trans  &trans
                                               &trans            &trans
            >;
        };

        layer_numpad {
            bindings = <
 &trans  &trans  &kp GRAVE  &kp MINUS  &kp EQUAL     &trans            &kp LBKT  &kp N7   &kp N8  &kp N9      &kp RBKT  &trans
 &trans  &trans     &trans     &trans     &trans     &trans              &kp N0  &kp N4   &kp N5  &kp N6  &kp ASTERISK  &trans
 &trans  &trans     &trans     &trans     &trans     &trans              &trans  &kp N1   &kp N2  &kp N3        &trans  &trans
                    &trans     &trans     &trans                                 &kp N0  &kp DOT  &trans
                                          &trans   &kp LCMD              &trans  &trans
                               &trans     &trans     &trans              &trans  &trans   &trans
                                                  &kp LSHFT              &trans
            >;
        };

        layer_media {
            bindings = <
 &reset  &trans  &trans  &tog 1  &trans  &trans            &kp LG(LBKT)  &kp LG(LS(LBKT))  &kp LG(LS(RBKT))       &kp LG(RBKT)  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                  &kp F8            &kp F9            &kp F7  &kp LG(LA(GRAVE))  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                  &trans            &trans            &trans             &trans  &trans  &trans
                 &trans  &trans  &trans                                      &kp C_VOL_DN      &kp C_VOL_UP         &kp K_MUTE
                                 &trans  &trans                  &trans            &trans
                         &trans  &trans  &trans                  &trans            &trans            &trans
                                         &trans                  &trans
            >;
        };

        layer_fn {
            bindings = <
 &out OUT_TOG    &bt BT_CLR        &trans        &trans        &trans        &trans            &trans  &kp F7  &kp F8  &kp F9  &trans  &trans
       &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans  &kp F4  &kp F5  &kp F6  &trans  &trans
       &trans        &trans        &trans        &trans        &trans        &trans            &trans  &kp F1  &kp F2  &kp F3  &trans  &trans
                                   &trans        &trans        &trans                                  &trans  &trans  &trans
                                                               &trans        &trans            &trans  &trans
                                                 &trans        &trans        &trans            &trans  &trans  &trans
                                                                             &trans            &trans
            >;
        };

    };
};
